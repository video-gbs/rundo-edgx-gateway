spring:
    resources:
        static-locations: classpath:/META-INF/resources/,classpath:/resources/,classpath:/static/,classpath:/public/,file:./static

    # REDIS数据库配置
    redis:
        # [必须修改] Redis服务器IP, REDIS安装在本机的,使用127.0.0.1
        host: ${REDIS_HOST:127.0.0.1}
        # [必须修改] 端口号
        port: ${REDIS_PORT:6379}
        # [可选] 数据库 DB
        database: ${REDIS_DB:6}
        # [可选] 访问密码,若你的redis服务器没有设置密码，就不需要用密码去连接
        password: ${REDIS_PWD:}
        # [可选] 超时时间
        timeout: 10000
    # [可选] jdbc数据库配置, 项目使用sqlite作为数据库，一般不需要配置
    datasource:
        # 使用mysql 打开23-28行注释， 删除29-36行
        name: wvp
        url: jdbc:mysql://${DATABASE_HOST:192.168.111.98}:3306/${DATABASE_NAME:wvppro_test}?useUnicode=true&characterEncoding=UTF8&rewriteBatchedStatements=true&serverTimezone=PRC&useSSL=false&allowMultiQueries=true&allowPublicKeyRetrieval=true
        username: ${DATABASE_USER:madmin}
        password: ${DATABASE_PWD:A123456}
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        druid:
            initialSize: 10                       # 连接池初始化连接数
            maxActive: 200                        # 连接池最大连接数
            minIdle: 5                            # 连接池最小空闲连接数
            maxWait: 60000                        # 获取连接时最大等待时间，单位毫秒。配置了maxWait之后，缺省启用公平锁，并发效率会有所下降，如果需要可以通过配置useUnfairLock属性为true使用非公平锁。
            keepAlive: true                       # 连接池中的minIdle数量以内的连接，空闲时间超过minEvictableIdleTimeMillis，则会执行keepAlive操作。
            validationQuery: select 1             # 检测连接是否有效sql，要求是查询语句，常用select 'x'。如果validationQuery为null，testOnBorrow、testOnReturn、testWhileIdle都不会起作用。
            testWhileIdle: true                   # 建议配置为true，不影响性能，并且保证安全性。申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。
            testOnBorrow: false                   # 申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。
            testOnReturn: false                   # 归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。
            poolPreparedStatements: false         # 是否開啟PSCache，並且指定每個連線上PSCache的大小
            timeBetweenEvictionRunsMillis: 60000  # 配置間隔多久才進行一次檢測，檢測需要關閉的空閒連線，單位是毫秒
            minEvictableIdleTimeMillis: 300000    # 配置一個連線在池中最小生存的時間，單位是毫秒
            filters: config,stat,slf4j             # 配置监控统计拦截的filters，监控统计用的filter:sta, 日志用的filter:log4j, 防御sql注入的filter:wall
            filter:
                wall:
                    config:
                        multi-statement-allow: true
            useGlobalDataSourceStat: true         # 合并多个DruidDataSource的监控数据
                # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
            connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=1000
                #stat-view-servlet.url-pattern: /admin/druid/*
    # rabbitmq 配置
    rabbitmq:
        host: ${RABBIT_HOST:192.168.100.189}
        port: ${RABBIT_PORT:5674}
        username: ${RABBIT_USER:wvpadmin}
        password: ${RABBIT_PWD:wvp12345678}
        publisher-returns: true      # 消息发送到交换机确认机制，是否确认回调
        #        publisher-confirm-type: correlated
        template:
            mandatory: true           #不可达消息是否回调,false时会忽略掉spring.rabbitmq.publisher-returns属性的值
        listener:
            simple:
                concurrency: 8            # 指定最小的消费者数量
                max-concurrency: 32       # 指定最大的消费者数量
                acknowledge-mode: manual  # 采用手动应答
                retry:
                    enabled: true           # 是否支持重试


mybatis:
    configuration:
        mapUnderscoreToCamelCase: true
# [可选] WVP监听的HTTP端口, 网页和接口调用都是这个端口
server:
    port: ${WVP_SERVER_PORT:18080}

# 作为28181服务器的配置
sip:
    # [必须修改] 本机的IP
    ip: ${WVP_HOST}
    # [可选] 28181服务监听的端口
    port: ${WVP_PORT:5060}
    # 根据国标6.1.2中规定，domain宜采用ID统一编码的前十位编码。国标附录D中定义前8位为中心编码（由省级、市级、区级、基层编号组成，参照GB/T 2260-2007）
    # 后两位为行业编码，定义参照附录D.3
    # 3701020049标识山东济南历下区 信息行业接入
    # [可选]
    domain: ${WVP_DOMAIN:4401020049}
    # [可选]
    id: ${WVP_ID:44010200492000000001}
    # [可选] 默认设备认证密码，后续扩展使用设备单独密码, 移除密码将不进行校验
    password: ${WVP_PWD:admin123}

#zlm 默认服务器配置
media:
    # [必须修改] zlm服务器唯一id，用于触发hook时区别是哪台服务器,general.mediaServerId
    id: ${ZLM_ID:127.0.0.1}
    # [必须修改] zlm服务器的内网IP
    ip: ${ZLM_HOST:127.0.0.1}
    # [必须修改] zlm服务器的http.port
    http-port: ${ZLM_PORT:80}

    # [可选] wvp在国标信令中使用的ip，此ip为摄像机可以访问到的ip--ZLM公网ip， 置空使用 media.ip
    sdp-ip: ${ZLM_SDP-IP:127.0.0.1}
    # [可选] 返回流地址时的ip-----ZLM公网ip，置空使用 media.ip
    stream-ip: ${ZLM_STREAM-IP:127.0.0.1}
    # [可选] zlm服务器的hook所使用的IP, 默认使用sip.ip

    # [必须修改] zlm服务器的http.port--外网端口
    http-play-port: ${ZLM_PLAY-PORT:2281}

    # [必须修改] zlm服务器的https.port--外网端口
    http-ssl-port: ${ZLM_PLAY-SSL-PORT:443}

    #zlm服务器的是否使用https
    enable-https: ${ENABLE_HTTPS:0}

    hook-ip: ${WVP_HOST}
    # [可选] zlm服务器的hook.admin_params=secret
    secret: 035c73f7-bb6b-4889-a715-d9eb2d1925cc
    # 启用多端口模式, 多端口模式使用端口区分每路流，兼容性更好。 单端口使用流的ssrc区分， 点播超时建议使用多端口测试
    rtp:
        # [可选] 是否启用多端口模式, 开启后会在portRange范围内选择端口用于媒体流传输
        enable: true
        # [可选] 在此范围内选择端口用于媒体流传输,
        port-range: 30000,30200 # 端口范围
        # [可选] 国标级联在此范围内选择端口发送媒体流,
        send-port-range: 30000,30200 # 端口范围
    # 录像辅助服务， 部署此服务可以实现zlm录像的管理与下载， 0 表示不使用
    record-assist-port: 18081
# [可选] 日志配置, 一般不需要改
logging:
    config: classpath:logback-spring-local.xml

# [根据业务需求配置]
user-settings:
    # 推流直播是否录制
    record-push-live: true
    auto-apply-play: false
    # 点播等待超时时间,单位：毫秒
    play-timeout: 5000
    # 上级点播等待超时时间,单位：毫秒
    platform-play-timeout: 60000
    # 设备录像下载最大时间周期 30分钟
    device-download-time-cycle: 1800

# 在线文档： swagger-ui（生产环境建议关闭）
swagger-ui:
    enabled: true

# 版本信息， 不需修改
version:
    version: "@project.version@"
    description: "@project.description@"
    artifact-id: "@project.artifactId@"

video:
    alarm:
        # 助手完成视频文件转移后回调的MQ地址
        callback-queue-id: ALARM
        live-url:
            prefix: https://rundogms.runjian.com:38080
    record:
        # 切片时间，单位：秒
        slice-time: 30
        # 定时器回调url，目前定时器内嵌，所以设置为本地
        callback-url: http://127.0.0.1:18080
        # 助手完成视频文件转移后回调的MQ地址
        callback-queue-id: RECORD

project-mq:
    exchange-id: PROJECT

mq:
    enabled: true
    queue-data-list:
        - id: ALARM
          routing-key: rundo.gbs.alarm
          queue-name: rundo.gbs.alarm
          exchange-id: VIDEO
        - id: RECORD
          routing-key: rundo.gbs.record
          queue-name: rundo.gbs.record
          exchange-id: VIDEO
        - id: DOWNLOAD
          routing-key: rundo.gbs.download
          queue-name: rundo.gbs.download
          exchange-id: VIDEO
    exchange-data-list:
        - id: VIDEO
          name: rundo.gbs.video
          type: topic
        - id: PROJECT
          name: rundo.gbs.project
          type: topic